{"ast":null,"code":"var _jsxFileName = \"S:\\\\OLMS\\\\New folder\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = ({\n  student,\n  onClose\n}) => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    type: 'bot',\n    content: \"Hello! I'm your AI learning assistant. I can help you with questions about your courses, notes, assignments, and any learning-related topics. How can I help you today?\",\n    timestamp: new Date()\n  }]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Use backend proxy endpoint instead of direct API call\n  const API_URL = '/api/chatbot';\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isOpen]);\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: inputMessage,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsLoading(true);\n    try {\n      // Send request to backend proxy endpoint\n      const requestData = {\n        message: inputMessage,\n        student_name: (student === null || student === void 0 ? void 0 : student.name) || 'Student'\n      };\n      const response = await axios.post(API_URL, requestData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const botResponse = response.data.response;\n      const botMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        content: botResponse,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Chatbot API Error:', error);\n      let errorContent = \"I'm sorry, I'm having trouble connecting right now. Please try again in a moment or contact your instructor for help.\";\n\n      // Check if it's a backend error with a specific message\n      if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error) {\n        errorContent = error.response.data.error;\n      }\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        content: errorContent,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const formatTime = timestamp => {\n    return timestamp.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const handleClose = () => {\n    setIsOpen(false);\n    setTimeout(() => {\n      onClose();\n    }, 300);\n  };\n  if (!isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-overlay\",\n    onClick: handleClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatbot-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-robot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatbot-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"AI Learning Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), \"Online\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-close\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.type === 'user' ? 'user-message' : 'bot-message'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-time\",\n            children: formatTime(message.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot-message\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: inputRef,\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask me anything about your learning...\",\n            className: \"chatbot-input\",\n            rows: \"1\",\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            disabled: !inputMessage.trim() || isLoading,\n            className: \"chatbot-send-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-paper-plane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-suggestions\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Quick questions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setInputMessage(\"How can I improve my study habits?\"),\n            children: \"Study tips\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setInputMessage(\"What are effective note-taking methods?\"),\n            children: \"Note-taking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setInputMessage(\"How do I prepare for exams?\"),\n            children: \"Exam prep\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"Vs9Qcx95f0lXO8t3+jrYNs+DMz0=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","Chatbot","student","onClose","_s","messages","setMessages","id","type","content","timestamp","Date","inputMessage","setInputMessage","isLoading","setIsLoading","isOpen","setIsOpen","messagesEndRef","inputRef","API_URL","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","focus","handleSendMessage","trim","userMessage","now","prev","requestData","message","student_name","name","response","post","headers","botResponse","data","botMessage","error","_error$response","_error$response$data","console","errorContent","errorMessage","handleKeyPress","e","key","shiftKey","preventDefault","formatTime","toLocaleTimeString","hour","minute","handleClose","setTimeout","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","map","ref","value","onChange","target","onKeyPress","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["S:/OLMS/New folder/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = ({ student, onClose }) => {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      id: 1,\r\n      type: 'bot',\r\n      content: \"Hello! I'm your AI learning assistant. I can help you with questions about your courses, notes, assignments, and any learning-related topics. How can I help you today?\",\r\n      timestamp: new Date()\r\n    }\r\n  ]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const messagesEndRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  // Use backend proxy endpoint instead of direct API call\r\n  const API_URL = '/api/chatbot';\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputMessage.trim() || isLoading) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      type: 'user',\r\n      content: inputMessage,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Send request to backend proxy endpoint\r\n      const requestData = {\r\n        message: inputMessage,\r\n        student_name: student?.name || 'Student'\r\n      };\r\n\r\n      const response = await axios.post(API_URL, requestData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      });\r\n\r\n      const botResponse = response.data.response;\r\n\r\n      const botMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        content: botResponse,\r\n        timestamp: new Date()\r\n      };\r\n\r\n      setMessages(prev => [...prev, botMessage]);\r\n    } catch (error) {\r\n      console.error('Chatbot API Error:', error);\r\n      \r\n      let errorContent = \"I'm sorry, I'm having trouble connecting right now. Please try again in a moment or contact your instructor for help.\";\r\n      \r\n      // Check if it's a backend error with a specific message\r\n      if (error.response?.data?.error) {\r\n        errorContent = error.response.data.error;\r\n      }\r\n      \r\n      const errorMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        content: errorContent,\r\n        timestamp: new Date()\r\n      };\r\n\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    return timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsOpen(false);\r\n    setTimeout(() => {\r\n      onClose();\r\n    }, 300);\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chatbot-overlay\" onClick={handleClose}>\r\n      <div className=\"chatbot-container\" onClick={(e) => e.stopPropagation()}>\r\n        {/* Header */}\r\n        <div className=\"chatbot-header\">\r\n          <div className=\"chatbot-header-left\">\r\n            <div className=\"chatbot-avatar\">\r\n              <i className=\"fas fa-robot\"></i>\r\n            </div>\r\n            <div className=\"chatbot-info\">\r\n              <h3>AI Learning Assistant</h3>\r\n              <span className=\"status\">\r\n                <span className=\"status-dot\"></span>\r\n                Online\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <button className=\"chatbot-close\" onClick={handleClose}>\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Messages */}\r\n        <div className=\"chatbot-messages\">\r\n          {messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              className={`message ${message.type === 'user' ? 'user-message' : 'bot-message'}`}\r\n            >\r\n              <div className=\"message-content\">\r\n                {message.content}\r\n              </div>\r\n              <div className=\"message-time\">\r\n                {formatTime(message.timestamp)}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          \r\n          {isLoading && (\r\n            <div className=\"message bot-message\">\r\n              <div className=\"message-content\">\r\n                <div className=\"typing-indicator\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Input */}\r\n        <div className=\"chatbot-input-container\">\r\n          <div className=\"chatbot-input-wrapper\">\r\n            <textarea\r\n              ref={inputRef}\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Ask me anything about your learning...\"\r\n              className=\"chatbot-input\"\r\n              rows=\"1\"\r\n              disabled={isLoading}\r\n            />\r\n            <button\r\n              onClick={handleSendMessage}\r\n              disabled={!inputMessage.trim() || isLoading}\r\n              className=\"chatbot-send-btn\"\r\n            >\r\n              <i className=\"fas fa-paper-plane\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"chatbot-suggestions\">\r\n            <span>Quick questions:</span>\r\n            <button onClick={() => setInputMessage(\"How can I improve my study habits?\")}>\r\n              Study tips\r\n            </button>\r\n            <button onClick={() => setInputMessage(\"What are effective note-taking methods?\")}>\r\n              Note-taking\r\n            </button>\r\n            <button onClick={() => setInputMessage(\"How do I prepare for exams?\")}>\r\n              Exam prep\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}